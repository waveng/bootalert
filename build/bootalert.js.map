{"version":3,"sources":["bootalert.js"],"names":["define","$","error","message","title","optionsOverride","notify","type","alertType","alertClass","getOptions","alertClasses","iconClass","iconClasses","progressColorClass","progressColorClasses","getContainer","options","create","$container","containerId","length","createContainer","info","subscribe","callback","listener","success","warning","clear","$alertElement","clearOptions","clearAlert","clearContainer","remove","removeAlert","children","alertsToClear","i","force","hideMethod","duration","hideDuration","easing","hideEasing","complete","attr","addClass","positionClass","appendTo","target","getDefaults","tapToDismiss","debug","showMethod","showDuration","showEasing","onShown","undefined","onHidden","closeMethod","closeDuration","closeEasing","closeOnHover","extendedTimeOut","timeOut","titleClass","messageClass","escapeHtml","iconHtml","closeHtml","closeClass","newestOnTop","preventDuplicates","progressBar","progressClass","rtl","publish","args","map","source","replace","personalizeAlert","setIcon","setTitle","setMessage","setCloseButton","setProgressBar","setRTL","setSequence","setAria","ariaValue","handleEvents","hover","stickAround","delayedHideAlert","onclick","click","hideAlert","closeButton","$closeElement","event","stopPropagation","cancelBubble","onCloseClick","displayAlert","hide","intervalId","setTimeout","maxHideTime","parseFloat","hideEta","Date","getTime","setInterval","updateProgress","find","append","prepend","suffix","$titleElement","$messageElement","$progressElement","shouldExit","previousAlert","override","method","clearTimeout","response","state","endTime","stop","percentage","width","extend","alertId","startTime","console","log","bootalert","is","version","amd","deps","factory","module","exports","require","window","jQuery"],"mappings":"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","file":"bootalert.js","sourcesContent":["/*\n * Alertr\n * Copyright 2012-2015\n * Authors: John Papa, Hans Fj√§llemark, and Tim Ferrell.\n * All Rights Reserved.\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\n *\n * ARIA Support: Greta Krafsig\n *\n * Project: https://github.com/waveng/bootalert\n */\n/* global define */\n(function (define) {\n    define(['jquery'], function ($) {\n        return (function () {\n            var $container;\n            var listener;\n            var alertId = 0;\n            var alertType = {\n                error: 'error',\n                info: 'info',\n                success: 'success',\n                warning: 'warning'\n            };\n\n            var bootalert = {\n                clear: clear,\n                remove: remove,\n                error: error,\n                getContainer: getContainer,\n                info: info,\n                options: {},\n                subscribe: subscribe,\n                success: success,\n                version: '2.1.4',\n                warning: warning\n            };\n\n            var previousAlert;\n\n            return bootalert;\n\n            ////////////////\n\n            function error(message, title, optionsOverride) {\n                return notify({\n                    type: alertType.error,\n                    alertClass: getOptions().alertClasses.error,\n                    iconClass: getOptions().iconClasses.error,\n                    progressColorClass: getOptions().progressColorClasses.error,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function getContainer(options, create) {\n                if (!options) { options = getOptions(); }\n                $container = $('#' + options.containerId);\n                if ($container.length) {\n                    return $container;\n                }\n                if (create) {\n                    $container = createContainer(options);\n                }\n                return $container;\n            }\n\n            function info(message, title, optionsOverride) {\n                return notify({\n                    type: alertType.info,\n                    alertClass: getOptions().alertClasses.info,\n                    iconClass: getOptions().iconClasses.info,\n                    progressColorClass: getOptions().progressColorClasses.info,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function subscribe(callback) {\n                listener = callback;\n            }\n\n            function success(message, title, optionsOverride) {\n                return notify({\n                    type: alertType.success,\n                    alertClass: getOptions().alertClasses.success,\n                    iconClass: getOptions().iconClasses.success,\n                    progressColorClass: getOptions().progressColorClasses.success,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function warning(message, title, optionsOverride) {\n                return notify({\n                    type: alertType.warning,\n                    alertClass: getOptions().alertClasses.warning,\n                    iconClass: getOptions().iconClasses.warning,\n                    progressColorClass: getOptions().progressColorClasses.warning,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function clear($alertElement, clearOptions) {\n                var options = getOptions();\n                if (!$container) { getContainer(options); }\n                if (!clearAlert($alertElement, options, clearOptions)) {\n                    clearContainer(options);\n                }\n            }\n\n            function remove($alertElement) {\n                var options = getOptions();\n                if (!$container) { getContainer(options); }\n                if ($alertElement && $(':focus', $alertElement).length === 0) {\n                    removeAlert($alertElement);\n                    return;\n                }\n                if ($container.children().length) {\n                    $container.remove();\n                }\n            }\n\n            // internal functions\n\n            function clearContainer (options) {\n                var alertsToClear = $container.children();\n                for (var i = alertsToClear.length - 1; i >= 0; i--) {\n                    clearAlert($(alertsToClear[i]), options);\n                }\n            }\n\n            function clearAlert ($alertElement, options, clearOptions) {\n                var force = clearOptions && clearOptions.force ? clearOptions.force : false;\n                if ($alertElement && (force || $(':focus', $alertElement).length === 0)) {\n                    $alertElement[options.hideMethod]({\n                        duration: options.hideDuration,\n                        easing: options.hideEasing,\n                        complete: function () { removeAlert($alertElement); }\n                    });\n                    return true;\n                }\n                return false;\n            }\n\n            function createContainer(options) {\n                $container = $('<div/>')\n                    .attr('id', options.containerId)\n                    .addClass(options.positionClass);\n\n                $container.appendTo($(options.target));\n                return $container;\n            }\n\n            function getDefaults() {\n                return {\n                    tapToDismiss: true,\n                    containerId: 'bootalert-container',\n                    debug: false,\n                    showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery\n                    showDuration: 300,\n                    showEasing: 'swing', //swing and linear are built into jQuery\n                    onShown: undefined,\n                    hideMethod: 'fadeOut',\n                    hideDuration: 1000,\n                    hideEasing: 'swing',\n                    onHidden: undefined,\n                    closeMethod: false,\n                    closeDuration: false,\n                    closeEasing: false,\n                    closeOnHover: true,\n\n                    extendedTimeOut: 1000,\n                    alertClasses: {\n                        error: 'alert-danger',\n                        info: 'alert-info',\n                        success: 'alert-success',\n                        warning: 'alert-warning'\n                    },\n                    iconClasses: {\n                        error: 'glyphicon-remove-sign',\n                        info: 'glyphicon-info-sign',\n                        success: 'glyphicon-ok-sign',\n                        warning: 'glyphicon-warning-sign'\n                    },\n                    alertClass: 'alert-info',\n                    iconClass: 'glyphicon-info-sign',\n                    positionClass: 'bootalert-top-right',\n                    timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky\n                    titleClass: 'bootalert-title',\n                    messageClass: 'bootalert-message',\n                    escapeHtml: false,\n                    target: 'body',\n                    iconHtml:'<div class=\"bootalert-icon\"><i class=\"glyphicon\"></i></div>',\n                    closeHtml: '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n                    closeClass: 'bootalert-close-button',\n                    newestOnTop: true,\n                    preventDuplicates: false,\n                    progressBar: false,\n                    progressColorClasses:{\n                        error: 'progress-bar-danger',\n                        info: 'progress-bar-info',\n                        success: 'progress-bar-success',\n                        warning: 'progress-bar-warning'\n                    },\n                    progressColorClass: 'progress-bar-info',\n                    progressClass: 'bootalert-progress',\n                    rtl: false\n                };\n            }\n\n            function publish(args) {\n                if (!listener) { return; }\n                listener(args);\n            }\n\n            function notify(map) {\n                var options = getOptions();\n                var iconClass = map.iconClass || options.iconClass;\n                var alertClass = map.alertClass || options.alertClass;\n                var progressColorClass = map.progressColorClass || options.progressColorClass;\n                if (typeof (map.optionsOverride) !== 'undefined') {\n                    options = $.extend(options, map.optionsOverride);\n                    iconClass = map.optionsOverride.iconClass || iconClass;\n                    alertClass = map.optionsOverride.alertClass || alertClass;\n                    progressColorClass = map.optionsOverride.progressColorClass || progressColorClass;\n                }\n\n                if (shouldExit(options, map)) { return; }\n\n                alertId++;\n\n                $container = getContainer(options, true);\n\n                var intervalId = null;\n                var $alertElement = $('<div/>');\n                var $titleElement = $('<div/>');\n                var $messageElement = $('<div/>');\n                var $progressElement = $('<div/>');\n\n                var $closeElement = $(options.closeHtml);\n                var progressBar = {\n                    intervalId: null,\n                    hideEta: null,\n                    maxHideTime: null\n                };\n                var response = {\n                    alertId: alertId,\n                    state: 'visible',\n                    startTime: new Date(),\n                    options: options,\n                    map: map\n                };\n\n                personalizeAlert();\n\n                displayAlert();\n\n                handleEvents();\n\n                publish(response);\n\n                if (options.debug && console) {\n                    console.log(response);\n                }\n\n                return $alertElement;\n\n                function escapeHtml(source) {\n                    if (source == null) {\n                        source = '';\n                    }\n\n                    return source\n                        .replace(/&/g, '&amp;')\n                        .replace(/\"/g, '&quot;')\n                        .replace(/'/g, '&#39;')\n                        .replace(/</g, '&lt;')\n                        .replace(/>/g, '&gt;');\n                }\n\n                function personalizeAlert() {\n                    setIcon();\n                    setTitle();\n                    setMessage();\n                    setCloseButton();\n                    setProgressBar();\n                    setRTL();\n                    setSequence();\n                    setAria();\n                }\n\n                function setAria() {\n                    var ariaValue = '';\n                    switch (alertClass) {\n                        case 'alert-success':\n                        case 'alert-info':\n                            ariaValue =  'polite';\n                            break;\n                        default:\n                            ariaValue = 'assertive';\n                    }\n                    $alertElement.attr('aria-live', ariaValue);\n                    $alertElement.attr('role', 'alert');\n                }\n\n                function handleEvents() {\n                    if (options.closeOnHover) {\n                        $alertElement.hover(stickAround, delayedHideAlert);\n                    }\n\n                    if (!options.onclick && options.tapToDismiss) {\n                        $alertElement.click(hideAlert);\n                    }\n\n                    if (options.closeButton && $closeElement) {\n                        $closeElement.click(function (event) {\n                            if (event.stopPropagation) {\n                                event.stopPropagation();\n                            } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\n                                event.cancelBubble = true;\n                            }\n\n                            if (options.onCloseClick) {\n                                options.onCloseClick(event);\n                            }\n\n                            hideAlert(true);\n                        });\n                    }\n\n                    if (options.onclick) {\n                        $alertElement.click(function (event) {\n                            options.onclick(event);\n                            hideAlert();\n                        });\n                    }\n                }\n\n                function displayAlert() {\n                    $alertElement.hide();\n\n                    $alertElement[options.showMethod](\n                        {duration: options.showDuration, easing: options.showEasing, complete: options.onShown}\n                    );\n\n                    if (options.timeOut > 0) {\n                        intervalId = setTimeout(hideAlert, options.timeOut);\n                        progressBar.maxHideTime = parseFloat(options.timeOut);\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n                        if (options.progressBar) {\n                            progressBar.intervalId = setInterval(updateProgress, 10);\n                        }\n                    }\n                }\n\n                function setIcon() {\n                    $alertElement.addClass('alert ' + alertClass + ' alert-dismissible');\n                    if (iconClass) {\n                        var iconHtml = $(options.iconHtml);\n                        iconHtml.find('i').addClass(iconClass);\n                        $alertElement.append(iconHtml);\n                    }\n                }\n\n                function setSequence() {\n                    if (options.newestOnTop) {\n                        $container.prepend($alertElement);\n                    } else {\n                        $container.append($alertElement);\n                    }\n                }\n\n                function setTitle() {\n                    if (map.title) {\n                        var suffix = map.title;\n                        if (options.escapeHtml) {\n                            suffix = escapeHtml(map.title);\n                        }\n                        $titleElement.append(suffix).addClass(options.titleClass);\n                        $alertElement.append($titleElement);\n                    }\n                }\n\n                function setMessage() {\n                    if (map.message) {\n                        var suffix = map.message;\n                        if (options.escapeHtml) {\n                            suffix = escapeHtml(map.message);\n                        }\n                        $messageElement.append(suffix).addClass(options.messageClass);\n                        $alertElement.append($messageElement);\n                    }\n                }\n\n                function setCloseButton() {\n                    if (options.closeButton) {\n                        $closeElement.addClass(options.closeClass).attr('role', 'button');\n                        $alertElement.prepend($closeElement);\n                    }\n                }\n\n                function setProgressBar() {\n                    if (options.progressBar) {\n                        $progressElement.addClass(options.progressClass +' ' + progressColorClass);\n                        $alertElement.prepend($progressElement);\n                    }\n                }\n\n                function setRTL() {\n                    if (options.rtl) {\n                        $alertElement.addClass('rtl');\n                    }\n                }\n\n                function shouldExit(options, map) {\n                    if (options.preventDuplicates) {\n                        if (map.message === previousAlert) {\n                            return true;\n                        } else {\n                            previousAlert = map.message;\n                        }\n                    }\n                    return false;\n                }\n\n                function hideAlert(override) {\n                    var method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;\n                    var duration = override && options.closeDuration !== false ?\n                        options.closeDuration : options.hideDuration;\n                    var easing = override && options.closeEasing !== false ? options.closeEasing : options.hideEasing;\n                    if ($(':focus', $alertElement).length && !override) {\n                        return;\n                    }\n                    clearTimeout(progressBar.intervalId);\n                    return $alertElement[method]({\n                        duration: duration,\n                        easing: easing,\n                        complete: function () {\n                            removeAlert($alertElement);\n                            clearTimeout(intervalId);\n                            if (options.onHidden && response.state !== 'hidden') {\n                                options.onHidden();\n                            }\n                            response.state = 'hidden';\n                            response.endTime = new Date();\n                            publish(response);\n                        }\n                    });\n                }\n\n                function delayedHideAlert() {\n                    if (options.timeOut > 0 || options.extendedTimeOut > 0) {\n                        intervalId = setTimeout(hideAlert, options.extendedTimeOut);\n                        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n                    }\n                }\n\n                function stickAround() {\n                    clearTimeout(intervalId);\n                    progressBar.hideEta = 0;\n                    $alertElement.stop(true, true)[options.showMethod](\n                        {duration: options.showDuration, easing: options.showEasing}\n                    );\n                }\n\n                function updateProgress() {\n                    var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100;\n                    $progressElement.width(percentage + '%');\n                }\n            }\n\n            function getOptions() {\n                return $.extend({}, getDefaults(), bootalert.options);\n            }\n\n            function removeAlert($alertElement) {\n                if (!$container) { $container = getContainer(); }\n                if ($alertElement.is(':visible')) {\n                    return;\n                }\n                $alertElement.remove();\n                $alertElement = null;\n                if ($container.children().length === 0) {\n                    $container.remove();\n                    previousAlert = undefined;\n                }\n            }\n\n        })();\n    });\n}(typeof define === 'function' && define.amd ? define : function (deps, factory) {\n    if (typeof module !== 'undefined' && module.exports) { //Node\n        module.exports = factory(require('jquery'));\n    } else {\n        window.bootalert = factory(window.jQuery);\n    }\n}));\n"]}